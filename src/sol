const fs = require('fs');
const readline = require('readline');
const path = require('path');

async function extractLogsForDate(logFile, targetDate, outputDir = 'output') {
    try {
        // Ensure output directory exists
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
        }

        const outputFile = path.join(outputDir, `output_${targetDate}.txt`);
        const fileStream = fs.createReadStream(logFile);
        const rl = readline.createInterface({ input: fileStream, crlfDelay: Infinity });

        const writeStream = fs.createWriteStream(outputFile);

        for await (const line of rl) {
            if (line.startsWith(targetDate)) {
                writeStream.write(line + '\n');
            }
        }

        writeStream.end();
        console.log(`Log entries for ${targetDate} saved to ${outputFile}`);
    } catch (error) {
        console.error(`Error processing file: ${error.message}`);
    }
}

if (process.argv.length !== 3) {
    console.log("Usage: node extract_logs.js YYYY-MM-DD");
    process.exit(1);
}

const targetDate = process.argv[2];
const logFile = "test_logs.log"; // Update with actual path if needed
extractLogsForDate(logFile, targetDate);
